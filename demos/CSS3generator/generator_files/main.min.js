function CSS3GInteract($scope) {
    function clean0PX(text) {
        return text = text.replace(/(\s+0px)/gm, " 0"), text = text.replace(/(^0px)/gm, "0"), text = text.replace(/(\s\s)/gm, " ")
    }
    $scope.title = "Choose Something", $scope.isFlying = !0, $scope.doHideBoxRGBA = !0, $scope.doHideBoxHex = !0, $scope.canFly = function() {
        ZeroClipboard.destroy(), document.getElementById("global-zeroclipboard-html-bridge") && (document.getElementById("global-zeroclipboard-html-bridge").style.top = "-9999px", document.getElementById("global-zeroclipboard-html-bridge").style.left = "0px"), $scope.isEmpty = !0, $scope.title = "Choose Something", $scope.browserText = "", $scope.isFlying = $scope.isFlying ? !1 : !0
    }, $scope.isEmpty = function() {
        $scope.isEmpty = $scope.isEmpty ? !1 : !0
    }, $scope.whatBrowser = function(chrome, ff, safari, ie, opera, android, iphone) {
        var browser_text = "&nbsp;";
        chrome && (browser_text += ' <img src="generator_files/chrome.svg" height="20" width="20" alt="Chrome ' + chrome + '">' + chrome + " &nbsp; "), ff && (browser_text += '<img src="generator_files/firefox.svg" height="20" width="20" alt="Firefox ' + ff + '" />' + ff + " &nbsp; "), safari && (browser_text += '<img src="generator_files/safari.svg" height="20" width="20" alt="Safari ' + safari + '" />' + safari + " &nbsp; "), ie && (browser_text += '<img src="generator_files/ie.svg" height="20" width="20" alt="IE ' + ie + '" />' + ie + " &nbsp; "), opera && (browser_text += '<img src="generator_files/opera.svg" height="20" width="20" alt="Opera ' + opera + '" />' + opera + " &nbsp; "), android && (browser_text += '<img src="generator_files/android.svg" height="20" width="20" alt="Android ' + android + '" />' + android + " &nbsp; "), iphone && (browser_text += '<img src="generator_files/iphone.svg" height="20" width="20" alt="iPhone ' + iphone + '" />' + iphone), $scope.browserText = browser_text
    }, $scope.cssEdit = function(kind, codeEl) {
        $scope.isFlying = !0, $scope.isEmpty = !1;
        for (var interactionAreas = document.getElementsByClassName("interaction-area-specific"), i = 0; i < interactionAreas.length; i++) interactionAreas[i].style.display = "none";
        $scope.zclip(codeEl), "borderRadius" == kind ? (document.getElementById("interaction-area-border-radius").style.display = "block", $scope.title = "Border Radius ") : "boxShadow" == kind ? (document.getElementById("interaction-area-box-shadow").style.display = "block", $scope.title = "Box Shadow") : "textShadow" == kind ? (document.getElementById("interaction-area-text-shadow").style.display = "block", $scope.title = "Text Shadow") : "rgba" == kind ? (document.getElementById("interaction-area-rgba").style.display = "block", $scope.title = "RGBA") : "fontFace" == kind ? (document.getElementById("interaction-area-font-face").style.display = "block", $scope.title = "Font Face") : "multipleColumns" == kind ? (document.getElementById("interaction-area-multiple-columns").style.display = "block", $scope.title = "Multiple Columns") : "boxResize" == kind ? (document.getElementById("interaction-area-box-resize").style.display = "block", $scope.title = "Box Resize") : "boxSizing" == kind ? (document.getElementById("interaction-area-box-sizing").style.display = "block", $scope.title = "Box Sizing") : "outline" == kind ? (document.getElementById("interaction-area-outline").style.display = "block", $scope.title = "Outline") : "transition" == kind ? (document.getElementById("interaction-area-transition").style.display = "block", $scope.title = "Transition") : "transform" == kind ? (document.getElementById("interaction-area-transform").style.display = "block", $scope.title = "Transform") : "flexbox" == kind ? (document.getElementById("interaction-area-flexbox").style.display = "block", $scope.title = "Flexbox") : "gradients" == kind && (document.getElementById("interaction-area-gradients").style.display = "block", $scope.title = "Gradient")
    }, $scope.doBorderRadius = function() {
        var tl = $scope.borderRadiusTL,
            tr = $scope.borderRadiusTR,
            br = $scope.borderRadiusBR,
            bl = $scope.borderRadiusBL;
        void 0 != tl && "" != tl && (tl += "px"), void 0 != tr && "" != tr && (tr += "px"), void 0 != br && "" != br && (br += "px"), void 0 != bl && "" != bl && (bl += "px");
        var fullRadius = tl;
        void 0 == tr && void 0 == br && void 0 == bl && (fullRadius = tl), void 0 != tr && void 0 == br && void 0 == bl && (fullRadius = tl + " " + tr), void 0 != tr && void 0 != br && void 0 == bl && (fullRadius = tl + " " + tr + " " + br), void 0 != tr && void 0 != br && void 0 != bl && (fullRadius = tl + " " + tr + " " + br + " " + bl), fullRadius = fullRadius.trim(), "" == fullRadius && (fullRadius = "0"), fullRadius = clean0PX(fullRadius), document.getElementById("border-radius-code").style.display = "block", $scope.borderRadiusCode = "-webkit-border-radius: " + fullRadius + ";<br />border-radius: " + fullRadius + ";", document.getElementById("interaction-area").style.WebkitBorderRadius = fullRadius, document.getElementById("interaction-area").style.borderRadius = fullRadius
    }, $scope.doBoxShadow = function() {
        $scope.doHideBoxRGBA = !0, $scope.doHideBoxHex = !0;
        var e = document.getElementById("box-shadow-inset"),
            inset = e.options[e.selectedIndex].value,
            horizontal = $scope.boxShadowHorizontal,
            vertical = $scope.boxShadowVertical,
            blur = $scope.boxShadowBlur,
            spread = $scope.boxShadowSpread,
            c = document.getElementById("box-shadow-color"),
            color = c.options[c.selectedIndex].value,
            r = $scope.boxShadowR,
            g = $scope.boxShadowG,
            b = $scope.boxShadowB,
            a = $scope.boxShadowA,
            rgba = "",
            hexColor = $scope.boxShadowHexColor;
        "rgba" == color ? $scope.doHideBoxRGBA = !1 : "hex" == color && ($scope.doHideBoxHex = !1);
        var fullBoxShadow = "";
        (void 0 != horizontal || "" != horizontal) && (horizontal += "px "), (void 0 != vertical || "" != vertical) && (vertical += "px "), (void 0 != blur || "" != blur) && (blur += "px "), (void 0 != spread || "" != spread) && (spread += "px "), void 0 != g && void 0 != b && void 0 != a && (g = "," + g, b = "," + b, a = "," + a, rgba = "rgba(" + r + g + b + a + ")"), void 0 != hexColor && (hexColor = "#" + hexColor), theColor = $scope.doHideBoxRGBA ? hexColor : rgba, fullBoxShadow = inset + " " + horizontal + " " + vertical + " " + blur + " " + spread + " " + theColor, fullBoxShadow = clean0PX(fullBoxShadow), void 0 != horizontal && void 0 != vertical && void 0 != blur && void 0 != spread && void 0 != theColor && (void 0 != hexColor || void 0 != g && void 0 != b && void 0 != a) && (document.getElementById("interaction-area").style.WebkitBoxShadow = fullBoxShadow, document.getElementById("interaction-area").style.boxShadow = fullBoxShadow, document.getElementById("box-shadow-code").style.display = "block", $scope.boxShadowCode = "-webkit-box-shadow:" + fullBoxShadow + ";<br />box-shadow:" + fullBoxShadow + ";")
    }, $scope.doTextShadow = function() {
        var horizontal = $scope.textShadowHorizontalLength,
            vertical = $scope.textShadowVerticalLength,
            blur = $scope.textShadowBlur,
            color = $scope.textShadowColor;
        void 0 != horizontal && "" != horizontal && (horizontal += "px"), void 0 != vertical && "" != vertical && (vertical += "px"), void 0 != blur && "" != blur && (blur += "px");
        var fullShadow = "";
        fullShadow = horizontal + " " + vertical + " " + blur + " #" + color, fullShadow = clean0PX(fullShadow), void 0 != horizontal && void 0 != vertical && void 0 != blur && void 0 != color && (document.getElementById("text-shadow-code").style.display = "block", $scope.textShadowCode = "text-shadow: " + fullShadow + ";"), document.getElementById("interaction-area").style.textShadow = fullShadow
    }, $scope.doRGBA = function() {
        var r = $scope.rgbaR,
            g = $scope.rgbaG,
            b = $scope.rgbaB,
            a = $scope.rgbaA,
            fullRGBA = "";
        fullRGBA = "rgba(" + r + ", " + g + ", " + b + ", " + a + ")", void 0 != r && void 0 != g && void 0 != b && void 0 != a && (document.getElementById("rgba-code").style.display = "block", $scope.rgbaCode = "background-color: " + fullRGBA + ";<br /><br />color: " + fullRGBA + ";"), document.getElementById("interaction-area").style.backgroundColor = fullRGBA
    }, $scope.doFontFace = function() {
        var family = $scope.fontFaceFamily,
            name = $scope.fontFaceName;
        void 0 != family && void 0 != name && (document.getElementById("font-face-code").style.display = "block", $scope.fontFaceCode = '@font-face {<br />&nbsp;&nbsp;font-family: "' + family + '";<br />&nbsp;&nbsp;src: url("' + name + '.eot?") format("eot"),<br />&nbsp;&nbsp;url("' + name + '.woff") format("woff"),<br />&nbsp;&nbsp;url("' + name + '.ttf") format("truetype");<br />}')
    }, $scope.doMultipleColumns = function() {
        var number = $scope.multipleColumnsNumber,
            gap = $scope.multipleColumnsGap + "px";
        void 0 != number && void 0 != gap && (document.getElementById("multiple-columns-code").style.display = "block", $scope.multipleColumnsCode = "-moz-column-count: " + number + ";<br />-moz-column-gap: " + gap + ";<br />-webkit-column-count: " + number + ";<br />-webkit-column-gap: " + gap + ";<br />column-count: " + number + ";<br />column-gap: " + gap + ";"), document.getElementById("multiple-columns-box").style.MozColumnCount = number, document.getElementById("multiple-columns-box").style.MozColumnGap = gap, document.getElementById("multiple-columns-box").style.WebkitColumnCount = number, document.getElementById("multiple-columns-box").style.WebkitColumnGap = gap, document.getElementById("multiple-columns-box").style.columnCount = number, document.getElementById("multiple-columns-box").style.columnGap = gap
    }, $scope.doBoxResize = function() {
        var e = document.getElementById("box-resize-type"),
            resize = e.options[e.selectedIndex].value;
        document.getElementById("box-resize-code").style.display = "block", $scope.boxResizeCode = "resize: " + resize + ";<br />overflow: auto;<br />min-width: 50px; /*suggest a min-width & min-height*/<br />min-height: 50px;", document.getElementById("interaction-area").style.resize = resize, document.getElementById("interaction-area").style.overflow = "auto"
    }, $scope.doFlexbox = function() {
        var e = document.getElementById("flexbox-type"),
            container = e.options[e.selectedIndex].value,
            d = document.getElementById("flexbox-direction"),
            direction = d.options[d.selectedIndex].value,
            w = document.getElementById("flexbox-wrap"),
            wrap = w.options[w.selectedIndex].value,
            j = document.getElementById("flexbox-justify"),
            justify = j.options[j.selectedIndex].value,
            a = document.getElementById("flexbox-align"),
            align = a.options[a.selectedIndex].value,
            ac = document.getElementById("flexbox-align-content"),
            aligncontent = ac.options[ac.selectedIndex].value;
        container.indexOf("undefined") > -1 || "" == container ? (container = "flex", containerCode = "<br />  display: " + container + ";") : containerCode = "<br />  display: " + container + ";", direction.indexOf("undefined") > -1 || "" == direction ? (direction = "row", directionCode = "") : directionCode = "<br />  flex-direction: " + direction + ";", wrap.indexOf("undefined") > -1 || "" == wrap ? (wrap = "nowrap", wrapCode = "") : wrapCode = "<br />  flex-wrap: " + wrap + ";", justify.indexOf("undefined") > -1 || "" == justify ? (justify = "flex-start", justifyCode = "") : justifyCode = "<br />  justify-content: " + justify + ";", align.indexOf("undefined") > -1 || "" == align ? (align = "stretch", alignCode = "") : alignCode = "<br />  align-items: " + align + ";", aligncontent.indexOf("undefined") > -1 || "" == aligncontent ? (aligncontent = "stretch", alignContentCode = "") : alignContentCode = "<br />  align-content: " + aligncontent + ";", document.getElementById("flexbox-code").style.display = "block", $scope.flexboxCode = ".flexbox-container {" + containerCode + directionCode + wrapCode + justifyCode + alignCode + alignContentCode + "<br />}", document.getElementById("flexbox-example").style.display = container, document.getElementById("flexbox-example").style.flexDirection = direction, document.getElementById("flexbox-example").style.flexWrap = wrap, document.getElementById("flexbox-example").style.justifyContent = justify, document.getElementById("flexbox-example").style.alignItems = align, document.getElementById("flexbox-example").style.alignContent = aligncontent
    }, $scope.doBoxSizing = function() {
        var e = document.getElementById("box-sizing-type"),
            sizing = e.options[e.selectedIndex].value;
        document.getElementById("box-sizing-code").style.display = "block", $scope.boxSizingCode = "-moz-box-sizing: " + sizing + ";<br />-webkit-box-sizing: " + sizing + ";<br />box-sizing: " + sizing + ";", document.getElementById("interaction-area").style.MozBoxSizing = sizing, document.getElementById("interaction-area").style.WebkitBoxSizing = sizing, document.getElementById("interaction-area").style.boxSizing = sizing
    }, $scope.doOutline = function() {
        var thickness = $scope.outlineThickness,
            color = $scope.outlineColor,
            offset = $scope.outlineOffset,
            e = document.getElementById("outline-style"),
            sizing = e.options[e.selectedIndex].value;
        thickness += "px", void 0 != color && (color = "#" + color), offset = void 0 != offset && "" != offset ? "<br />outline-offset: " + offset + "px;" : "", thickness = clean0PX(thickness), void 0 != thickness && void 0 != color && void 0 != sizing && (document.getElementById("outline-code").style.display = "block", $scope.outlineCode = "outline: " + thickness + " " + sizing + " " + color + ";" + offset), document.getElementById("interaction-area").style.outline = thickness + " " + sizing + " " + color, void 0 != offset && "" != offset && (document.getElementById("interaction-area").style.outlineOffset = $scope.outlineOffset + "px")
    }, $scope.doTransition = function() {
        var duration = $scope.transitionDuration,
            e = document.getElementById("transition-property"),
            property = e.options[e.selectedIndex].value;
        e2 = document.getElementById("transition-time"), time = e2.options[e2.selectedIndex].value, e3 = document.getElementById("transition-function"), tfunction = e3.options[e3.selectedIndex].value;
        var fullTransition = property + " " + duration + time + " " + tfunction;
        void 0 != duration && "? undefined:undefined ?" != property && "? undefined:undefined ?" != time && "? undefined:undefined ?" != tfunction && (document.getElementById("transition-example").style.display = "block", document.getElementById("transition-code").style.display = "block", $scope.transitionCode = "-webkit-transition: " + fullTransition + ";<br />-moz-transition: " + fullTransition + ";<br />-ms-transition: " + fullTransition + ";<br />-o-transition: " + fullTransition + ";<br />transition: " + fullTransition + ";"), document.getElementById("transition-example").style.MozTransition = fullTransition, document.getElementById("transition-example").style.webkitTransition = fullTransition, document.getElementById("transition-example").style.transition = fullTransition
    }, $scope.doTransform = function() {
        var scale = "",
            rotate = "",
            translateX = "",
            translateY = "",
            skewX = "",
            skewY = "",
            fullTransform = "";
        document.getElementById("transform-example").style.display = "block", document.getElementById("transform-code").style.display = "block", void 0 != $scope.transformScale && "" != $scope.transformScale && (scale = "scale(" + $scope.transformScale + ") "), void 0 != $scope.transformRotate && "" != $scope.transformRotate && (rotate = "rotate(" + $scope.transformRotate + "deg) "), void 0 != $scope.transformTranslateX && "" != $scope.transformTranslateX && (translateX = "translateX(" + $scope.transformTranslateX + "px) "), void 0 != $scope.transformTranslateY && "" != $scope.transformTranslateY && (translateY = "translateY(" + $scope.transformTranslateY + "px) "), void 0 != $scope.transformSkewX && "" != $scope.transformSkewX && (skewX = "skewX(" + $scope.transformSkewX + "deg) "), void 0 != $scope.transformSkewY && "" != $scope.transformSkewY && (skewY = "skewY(" + $scope.transformSkewY + "deg) "), fullTransform = scale + rotate + translateX + translateY + skewX + skewY, fullTransform = fullTransform.trim(), $scope.transformCode = "-moz-transform: " + fullTransform + ";<br />-webkit-transform: " + fullTransform + ";<br />-o-transform: " + fullTransform + ";<br />-ms-transform: " + fullTransform + ";<br />transform: " + fullTransform + ";", document.getElementById("transform-example").style.webkitTransform = fullTransform, document.getElementById("transform-example").style.MozTransform = fullTransform, document.getElementById("transform-example").style.transform = fullTransform
    }, $scope.zclip = function(el) {
        if (el) {
            ZeroClipboard.setDefaults({
                moviePath: "../zclip/ZeroClipboard.swf",
                hoverClass: "zeroclipboard-is-hover",
                activeClass: "zeroclipboard-is-active",
                useNoCache: !1,
                forceHandCursor: !0,
                zIndex: 999999999,
                debug: !1
            });
            var clip = new ZeroClipboard;
            clip.glue(document.querySelectorAll(".copy-code")), clip.on("load", function(client) {
                var text = document.getElementById(el);
                text = text.getElementsByTagName("pre")[0].innerHTML, text = text.replace(/\<br[\/]*\>/g, "\n"), text = text.replace(/\&nbsp;/g, " "), clip.setText(text), client.on("complete", function() {
                    document.getElementById("copied").className = "", setTimeout(function() {
                        document.getElementById("copied").className = "hidden"
                    }, 2e3)
                })
            })
        }
    }
}
var app = angular.module("css3g", ["ngSanitize"]);
